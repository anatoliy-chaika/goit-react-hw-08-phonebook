{"version":3,"file":"static/js/202.d124a9ef.chunk.js","mappings":"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","sources":["components/redux/contacts/selectors.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactForm/ContacctForm.styled.js","components/ContactForm/ContactForm.js","pages/Contacts.styled.js","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filters;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(normalizedFilter);\n  });\n};\n","import styled from '@emotion/styled';\n\nexport const LiItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ButtonDel = styled.button`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n\n  &:hover,\n  :focus {\n    background-color: red;\n    color: #f4f6f9;\n  }\n`;\n\nexport const Phone = styled.span`\n  margin-left: 70px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'components/redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport { LiItem, ButtonDel, Phone } from './ContactItem.styled';\nimport { AiOutlineDelete } from 'react-icons/ai';\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <LiItem>\n      <p>\n        {name}: <Phone>{number}</Phone>\n      </p>\n      <ButtonDel type=\"button\" onClick={handleDelete}>\n        Delete <AiOutlineDelete />\n      </ButtonDel>\n    </LiItem>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\nexport const ItemList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n`;\n","import { selectVisibleContacts } from 'components/redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { ItemList, Info } from './ContactList.styled';\n\nexport const Contactlist = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return contacts.length === 0 ? (\n    <Info>Your Phonebook is empty now</Info>\n  ) : (\n    <ItemList>\n      {contacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            <ContactItem contact={contact} />\n          </li>\n        );\n      })}\n    </ItemList>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterInput = styled.input`\n  border: 1px solid #cfcfd0;\n  border-radius: 4px;\n  &:hover,\n  :focus {\n    border-color: #7fadf7;\n    outline: 1px solid #7fadf7;\n  }\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 200px;\n  margin-bottom: 20px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'components/redux/contacts/filtersSlice';\nimport PropTypes from 'prop-types';\nimport { FilterInput, FilterLabel } from './Filter.styled';\n\nexport const FilterContacts = () => {\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChange}\n      ></FilterInput>\n    </FilterLabel>\n  );\n};\n\nFilterContacts.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Field = styled(FormikField)`\n  width: 200px;\n  border-radius: 5px;\n  border: 1px solid #cfcfd0;\n  border-radius: 4px;\n  &:hover,\n  :focus {\n    border-color: #7fadf7;\n    outline: 1px solid #7fadf7;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n`;\n\nexport const FormLable = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const ButtonSubmit = styled.button`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  width: 200px;\n  border: 1px solid #cfcfd0;\n  border-radius: 5px;\n  padding: 2px 6px;\n  margin-bottom: 20px;\n  &:hover,\n  :focus {\n    background-color: #7fadf7;\n    color: #f4f6f9;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'components/redux/contacts/operations';\nimport { selectContacts } from 'components/redux/contacts/selectors';\nimport Notiflix from 'notiflix';\n\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\n\nimport * as Yup from 'yup';\nimport {\n  Field,\n  Form,\n  ErrorMessage,\n  FormLable,\n  ButtonSubmit,\n} from './ContacctForm.styled';\nimport { BsFillBrushFill } from 'react-icons/bs';\n\nconst startValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(2, 'Too Short!')\n\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = values => {\n    const isAlreadyInContacts = contacts.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (isAlreadyInContacts) {\n      Notiflix.Report.failure(`${values.name}: is already in your contacts`);\n      return;\n    }\n    dispatch(addContact({ name: values.name, number: values.number }));\n  };\n\n  return (\n    <Formik\n      initialValues={startValues}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit({\n          ...values,\n        });\n        actions.resetForm();\n      }}\n    >\n      <Form autoComplete=\"off\">\n        <FormLable>\n          Name\n          <Field name=\"name\" type=\"text\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormLable>\n\n        <FormLable>\n          Number\n          <Field name=\"number\" type=\"text\" />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormLable>\n        <ButtonSubmit type=\"submit\">\n          Add contact <BsFillBrushFill />\n        </ButtonSubmit>\n      </Form>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  onSave: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Hero = styled.h1`\n  text-align: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Contactlist } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'components/redux/contacts/operations';\nimport { selectIsLoading } from 'components/redux/contacts/selectors';\nimport { FilterContacts } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { selectError } from 'components/redux/contacts/selectors';\nimport { Hero } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <Hero>Your Contacts</Hero>\n      <ContactForm />\n      <title>Your tasks</title>\n      <FilterContacts />\n      <Contactlist />\n      {isLoading && !error && <b>Request in progress...</b>}\n    </main>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","filters","selectFilter","normalizedFilter","toLowerCase","contact","name","includes","LiItem","styled","ButtonDel","Phone","ContactItem","id","number","dispatch","useDispatch","type","onClick","deleteContact","ItemList","Info","Contactlist","useSelector","length","map","FilterInput","FilterLabel","FilterContacts","onChange","e","changeFilter","target","value","Form","FormikForm","Field","FormikField","ErrorMessage","FormikError","FormLable","ButtonSubmit","startValues","ContactSchema","Yup","shape","min","max","required","ContactForm","initialValues","validationSchema","onSubmit","values","actions","some","Notiflix","addContact","handleSubmit","resetForm","autoComplete","component","Hero","Contacts","useEffect","fetchContacts"],"sourceRoot":""}